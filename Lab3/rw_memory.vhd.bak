 library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.cpu_package.all;


entity rw_memory is
	port(
		adr  : in address_bus;
		data : inout data_bus;
		clk  : in std_logic;
		ce   : in std_logic;
		rw   : in std_logic
	);
end entity;


architecture rtl of rw_memory is

	type data_bus_array is array (14 downto 0) of data_bus;

	signal data_buses: data_bus_array;
	signal int_data : data_bus;

	begin
	
	process
		if (ce = '1') then 
			data <= (others => 'Z');
		else
			if (re = '1') then
				data <= data_buses(to_integer(unsigned(adr)));
			else
				data_buses(to_integer(unsigned(adr))) <= data;
			end if;
		end if;
	end process; 
	
	
	
	
--		process(adr, data, clk, ce, rw)
--			begin
--			if rw = '0' and rising_edge(clk) then
--				data_buses(to_integer(unsigned(adr))) <= data;
--			else
--				int_data <= data_buses(to_integer(unsigned(adr)));
--			end if;
--		end process;
--		data <= int_data when ce = '1' else (others => 'Z');
		
end architecture;
