# Reading C:/altera/13.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# do Lab4-5_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {C:/Users/Markus Brislöv/Documents/IL1331 - VHDL Design/VHDL-Design/Lab4-5/CPU_Package.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_SIGNED
# -- Compiling package CPU_Package
# -- Compiling package body CPU_Package
# -- Loading package CPU_Package
# vcom -93 -work work {C:/Users/Markus Brislöv/Documents/IL1331 - VHDL Design/VHDL-Design/Lab4-5/Nibble_Counter.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_SIGNED
# -- Loading package CPU_Package
# -- Compiling entity Nibble_Counter
# -- Compiling architecture RTL of Nibble_Counter
# 
# vcom -93 -work work {C:/Users/Markus Brislöv/Documents/IL1331 - VHDL Design/VHDL-Design/Lab4-5/Controller_TB.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_SIGNED
# -- Loading package CPU_Package
# -- Compiling entity Controller_TB
# -- Compiling architecture Testbench of Controller_TB
# vcom -93 -work work {C:/Users/Markus Brislöv/Documents/IL1331 - VHDL Design/VHDL-Design/Lab4-5/Controller.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_SIGNED
# -- Loading package CPU_Package
# -- Compiling entity Controller
# -- Compiling architecture RTL of Controller
# vcom -93 -work work {C:/Users/Markus Brislöv/Documents/IL1331 - VHDL Design/VHDL-Design/Lab4-5/ROM.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_SIGNED
# -- Loading package CPU_Package
# -- Compiling entity ROM
# -- Compiling architecture RTL of ROM
# 
# vsim -t 1ps -L altera -L lpm -L sgate -L altera_mf -L altera_lnsim -L cycloneiv_hssi -L cycloneiv_pcie_hip -L cycloneiv -L rtl_work -L work -voptargs="+acc"  Controller_TB
# vsim -L altera -L lpm -L sgate -L altera_mf -L altera_lnsim -L cycloneiv_hssi -L cycloneiv_pcie_hip -L cycloneiv -L rtl_work -L work -voptargs=\"+acc\" -t 1ps Controller_TB 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_signed(body)
# Loading work.cpu_package(body)
# Loading work.controller_tb(testbench)
# Loading work.rom(rtl)
# Loading work.controller(rtl)
# Loading work.nibble_counter(rtl)
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run 200 ns
add wave -position end  sim:/controller_tb/UUT/curr_state
restart
run
run
run
run
run
run
run
run
run
add wave -position end  sim:/controller_tb/UUT/adr
add wave -position end  sim:/controller_tb/UUT/data
add wave -position end  sim:/controller_tb/UUT/rw_RWM
add wave -position end  sim:/controller_tb/UUT/RWM_en
add wave -position end  sim:/controller_tb/UUT/ROM_en
add wave -position end  sim:/controller_tb/UUT/clk
add wave -position end  sim:/controller_tb/UUT/reset
add wave -position end  sim:/controller_tb/UUT/rw_reg
add wave -position end  sim:/controller_tb/UUT/sel_op_1
add wave -position end  sim:/controller_tb/UUT/sel_op_0
add wave -position end  sim:/controller_tb/UUT/sel_in
add wave -position end  sim:/controller_tb/UUT/sel_mux
add wave -position end  sim:/controller_tb/UUT/alu_op
add wave -position end  sim:/controller_tb/UUT/alu_en
add wave -position end  sim:/controller_tb/UUT/z_flag
add wave -position end  sim:/controller_tb/UUT/n_flag
add wave -position end  sim:/controller_tb/UUT/o_flag
add wave -position end  sim:/controller_tb/UUT/out_en
add wave -position end  sim:/controller_tb/UUT/data_imm
add wave -position end  sim:/controller_tb/UUT/step
add wave -position end  sim:/controller_tb/UUT/curr_state
add wave -position end  sim:/controller_tb/UUT/next_state
add wave -position end  sim:/controller_tb/UUT/instr
add wave -position end  sim:/controller_tb/UUT/PC_load_en
add wave -position end  sim:/controller_tb/UUT/PC_load_val
add wave -position end  sim:/controller_tb/UUT/PC_curr_val
add wave -position end  sim:/controller_tb/UUT/instr_d3d2d1d0
add wave -position end  sim:/controller_tb/UUT/instr_mem
add wave -position end  sim:/controller_tb/UUT/instr_r3
add wave -position end  sim:/controller_tb/UUT/instr_r2
add wave -position end  sim:/controller_tb/UUT/instr_r1
add wave -position end  sim:/controller_tb/UUT/instr_op
add wave -position end  sim:/controller_tb/UUT/instr_alu
restart
run
run
run
run
run
